import React, { useState, useEffect } from 'react'
import SideDrawer from '../../components/sidebar/Sidebar'
import Paper from "@mui/material/Paper"
import Box from "@mui/material/Box"
import Grid from "@mui/material/Grid"
import Button from "@mui/material/Button"
import TextField from "@mui/material/TextField";
import CircularProgress from "@mui/material/CircularProgress";
import DropzoneAudio from "../../components/dropzone/DropzoneAudio"
import {
  textField,
  df_jc_ac,
  circularprog
} from '../../theme/CssMy'

import { getPrescriptionData, getPrescriptionImage, updateAppointment } from '../../services/doctorService'
import Loading from '../../components/loader/Loading'
import { Buffer } from 'buffer';



const emptyPres =
  ''
  

const PrescriptionPage = () => {

  const patientData = JSON.parse(localStorage.getItem('eyPatient'))
  // console.log(patientData);

  const doctorData = JSON.parse(localStorage.getItem('eyUser'))
  const [image, setImage] = useState(emptyPres)
  const [loading, setLoading] = useState(false)
  const [load, setLoad] = useState()
  const [flag, setFlag] = useState(false)
  const [prescriptionData, setPrescriptionData] = useState()
  const [json, setJson] = useState({
    "name": patientData.name,
    "age": patientData.patientDemographics.age.toString(),
    "gender": patientData.patientDemographics.gender,
    "weight": patientData.patientDemographics.weight,
    "demographics": [patientData.patientDemographics.gender, patientData.patientDemographics.height,
    patientData.patientDemographics.age.toString(), patientData.patientDemographics.weight],
    "disease": ["Breast Cancer"]
  })

  const handleChange = (e) => {
    const name = e.target.name
    const value = e.target.value
    setJson({ ...json, [name]: value })
    console.log(json)
  }

  const handleClick = () => {
    console.log('click')
  }

  const handleGenerate = () => {
    setFlag(true)
    setLoading(true)
    const func = async () => {
      await getPrescriptionData(json).then((res) => {
        // console.log(res)
        setPrescriptionData(res.data)
      })
      setLoading(false)
    }
    func()
  }

  // useEffect(() => {
  //   setLoading(true)
  //   const func = () => {
  //     getPrescriptionData(json).then((res) => {
  //       // console.log(res)
  //       setPrescriptionData(res.data)
  //     })
  //     setLoading(false)
  //   }
  //   func()
  // }, [])

  return (
    <SideDrawer>
      <Grid container spacing={2}>
        <Grid item xs={6}>
          <Paper sx={{ height: '100%', borderRadius: 3 }}>
            <img
              src={'data:image/png;base64,' + image}
              height="100%"
              width="100%"
              alt=""
            />
          </Paper>
        </Grid>
        <Grid item xs={6}>
          <Grid container spacing={2} direction="column">
            <Grid item xs={6}>
              <DropzoneAudio
                onHover={handleClick}
                text="Drag and drop the meeting audio or click here to upload for prescription generation"
              ></DropzoneAudio>
              <Button
                color="primary"
                variant="contained"
                sx={{
                  backgroundColor: '#005739',
                  marginLeft: '35%',
                  marginTop: 2,
                  '&:hover': {
                    backgroundColor: '#fff',
                    color: '#005739',
                    border: '1px solid #005739',
                  },
                }}
                onClick={handleGenerate}
              >
                Generate Prescription
              </Button>
            </Grid>
            {flag === true ? (
              loading ? (
                <Box sx={{ ...df_jc_ac, height: '40vh' }}>
                  <Loading />
                </Box>
              ) : (
                <Grid item xs={6}>
                  <Paper sx={{ p: 4, borderRadius: 3 }}>
                    <Box sx={{ fontWeight: 500, fontSize: 25, mb: 2 }}>
                      Proposed Plan
                    </Box>

                    <TextField
                      InputLabelProps={{
                        shrink: true,
                      }}
                      variant="outlined"
                      label="Medicine"
                      sx={textField}
                      defaultValue={`${prescriptionData?.medicine}`}
                      name="medicine"
                      onChange={handleChange}
                      placeholder=""
                      multiline
                      maxRows={3}
                    />
                    <TextField
                      variant="outlined"
                      label="Diet Plan"
                      sx={textField}
                      value={`Food to Eat : ${prescriptionData?.diet_plan.food_to_eat.map(
                        (item) => item
                      )} 
Food to Avoid : ${prescriptionData?.diet_plan.food_to_avoid.map(
                        (item) => item
                      )} 
                  `}
                      name="diet_plan"
                      // onChange={handleChange}
                      placeholder=""
                      multiline
                      maxRows={4}
                    />
                    <TextField
                      variant="outlined"
                      label="Exercise Plan"
                      sx={textField}
                      value={`${prescriptionData?.exercise_plan.map(
                        (item) => item
                      )}`}
                      name="exercise_plan"
                      // onChange={handleChange}
                      placeholder=""
                      multiline
                      maxRows={2}
                    />
                    <TextField
                      variant="outlined"
                      label="Precautions"
                      sx={textField}
                      value={`${prescriptionData?.precautions.map(
                        (item) => item
                      )}`}
                      name="precautions"
                      // onChange={handleChange}
                      placeholder=""
                      multiline
                      maxRows={4}
                    />
                    <TextField
                      variant="outlined"
                      label="Remarks (Optional)"
                      sx={textField}
                      // value={json.email}
                      name="remarks"
                      // onChange={handleChange}
                      // placeholder="Remarks (optional)"
                    />
                    <Box
                      sx={{
                        display: 'flex',
                        flexDirection: 'row-reverse',
                        mt: 1,
                      }}
                    >
                      <Button
                        onClick={() => {
                          setLoad(true)
                          getPrescriptionImage({
                            name: patientData.name,
                            age: patientData.patientDemographics.age.toString(),
                            gender: patientData.patientDemographics.gender,
                            weight: patientData.patientDemographics.weight,
                            doctor_name: doctorData.name,
                            diet_plan: prescriptionData.diet_plan,
                            exercise_plan: prescriptionData.exercise_plan,
                            precautions: prescriptionData.precautions,
                            medicine: prescriptionData.medicine,
                          }).then((res) => {
                            console.log(res)
                            let base64ImageString = Buffer.from(
                              res.data,
                              'binary'
                            ).toString('base64')
                            setImage(base64ImageString)
                            var id = JSON.parse(localStorage.getItem("eyPres"))
                            console.log(id)
                            // updateAppointment(id, {
                            //   prescription: base64ImageString,
                            //   status: 'visited'
                            // })
                            setLoad(false)

                          })
                        }}
                        variant="contained"
                        sx={{
                          py: 1,
                          px: 2,
                          borderRadius: 2,
                          boxShadow: 'none',
                          backgroundColor: '#005739',
                          '&:hover': {
                            backgroundColor: '#fff',
                            color: '#005739',
                            border: '1px solid #005739',
                          },
                        }}
                      >
                        {' '}
                        {load ? (
                          <CircularProgress size={30} sx={circularprog} />
                        ) : (
                          'Sign'
                        )}
                      </Button>
                    </Box>
                  </Paper>
                </Grid>
              )
            ) : (
              <Grid item xs={6}>
                <Paper sx={{ p: 4, borderRadius: 3 }}>
                  <Box sx={{ fontWeight: 500, fontSize: 25, mb: 2 }}>
                    Proposed Plan
                  </Box>

                  <TextField
                    // InputLabelProps={{
                    //   shrink: true,
                    // }}
                    variant="outlined"
                    label="Medicine"
                    sx={textField}
                    defaultValue=""
                    name="medicine"
                    onChange={handleChange}
                    placeholder=""
                    multiline
                    maxRows={3}
                  />
                  <TextField
                    variant="outlined"
                    label="Diet Plan"
                    sx={textField}
                    defaultValue=""
                    name="diet_plan"
                    // onChange={handleChange}
                    placeholder=""
                    multiline
                    maxRows={4}
                  />
                  <TextField
                    variant="outlined"
                    label="Exercise Plan"
                    sx={textField}
                    defaultValue=""
                    name="exercise_plan"
                    // onChange={handleChange}
                    placeholder=""
                    multiline
                    maxRows={2}
                  />
                  <TextField
                    variant="outlined"
                    label="Precautions"
                    sx={textField}
                    // value={`${prescriptionData?.precautions.map(
                    //   (item) => item
                    // )}`}
                    defaultValue=""
                    name="precautions"
                    // onChange={handleChange}
                    placeholder=""
                    multiline
                    maxRows={4}
                  />
                  <TextField
                    variant="outlined"
                    label="Remarks (Optional)"
                    sx={textField}
                    defaultValue=""
                    // value={json.email}
                    name="remarks"
                    // onChange={handleChange}
                    // placeholder="Remarks (optional)"
                  />
                  <Box
                    sx={{
                      display: 'flex',
                      flexDirection: 'row-reverse',
                      mt: 1,
                    }}
                  >
                    <Button
                      onClick={() => {
                        getPrescriptionImage({
                          name: patientData.name,
                          age: patientData.patientDemographics.age.toString(),
                          gender: patientData.patientDemographics.gender,
                          weight: patientData.patientDemographics.weight,
                          doctor_name: doctorData.name,
                          diet_plan: prescriptionData.diet_plan,
                          exercise_plan: prescriptionData.exercise_plan,
                          precautions: prescriptionData.precautions,
                          medicine: prescriptionData.medicine,
                        }).then((res) => {
                          console.log(res)
                          let base64ImageString = Buffer.from(
                            res.data,
                            'binary'
                          ).toString('base64')
                          setImage(base64ImageString)
                        })
                      }}
                      variant="contained"
                      sx={{
                        py: 1,
                        px: 2,
                        borderRadius: 2,
                        boxShadow: 'none',
                        backgroundColor: 'rgb(0,87,57)',
                        '&:hover': {
                    backgroundColor: '#fff',
                    color: '#005739',
                    border: '1px solid #005739'
                  },
                      }}
                    >
                      {' '}
                      Sign{' '}
                    </Button>
                  </Box>
                </Paper>
              </Grid>
            )}
          </Grid>
        </Grid>
      </Grid>
    </SideDrawer>
  )
}

export default PrescriptionPage